{{- if .Values.services.nginx.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
spec:
  replicas: {{ .Values.services.nginx.replicaCount }}
  selector:
    matchLabels:
      app: nginx
  strategy:
    type: Recreate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/nginx/configmap.yaml") . | sha256sum }}
        checksum/file: {{ (.Files.Get "files/nginx.conf") | sha256sum }}
      labels:
        app: nginx
    spec:
      containers:
        - image: "{{ .Values.services.nginx.image.repository }}:{{ .Values.services.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.services.nginx.image.pullPolicy }}
          name: nginx
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "{{ .Values.common.tz }}"
          ports:
            - name: http
              containerPort: {{ .Values.services.nginx.ports.http }}
              protocol: TCP
            - name: https
              containerPort: {{ .Values.services.nginx.ports.https }}
              protocol: TCP
            - name: plex
              containerPort: {{ .Values.services.plex.ports.http }}
              protocol: TCP
          volumeMounts:
            - name: nginx-configs
              readOnly: true
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-configs
              readOnly: true
              mountPath: /etc/nginx/ssl.conf
              subPath: ssl.conf
            - name: nginx-configs
              readOnly: true
              mountPath: /etc/nginx/nginx_proxy_headers.conf
              subPath: nginx_proxy_headers.conf
            - name: letsencrypt
              readOnly: true
              mountPath: /etc/letsencrypt
            - name: public
              readOnly: true
              mountPath: {{ .Values.services.nginx.public_path }}
          livenessProbe:
            exec:
              command:
                - /usr/sbin/nginx
                - "-s"
                - reload
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 3600
            timeoutSeconds: 5
      volumes:
        - name: nginx-configs
          configMap:
            name: nginx
        - name: letsencrypt
          hostPath:
            path: /etc/letsencrypt
        - name: public
          hostPath:
            path: {{ .Values.services.nginx.public_path }}
{{- end }}
