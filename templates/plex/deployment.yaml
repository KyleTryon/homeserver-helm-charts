{{- if .Values.services.plex.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
  namespace: default
  labels:
    app.kubernetes.io/name: plex
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.services.plex.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: plex
  template:
    metadata:
      labels:
        app.kubernetes.io/name: plex
    spec:
      containers:
        - name: plex
          image: "{{ .Values.services.plex.image.repository }}:{{ .Values.services.plex.image.tag }}"
          imagePullPolicy: {{ .Values.services.plex.image.pullPolicy }}
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "{{ .Values.common.tz }}"
          ports:
            - name: http
              containerPort: 32400
              protocol: TCP
          volumeMounts:
            - name: plex-config
              mountPath: /config
            - name: tv
              mountPath: /tv
            - name: movies
              mountPath: /movies
            - name: music
              mountPath: /music
            - name: photos
              mountPath: /photos
      volumes:
        - name: plex-config
          hostPath:
            path: "{{ .Values.services.plex.config }}"
            type: Directory
        - name: tv
          hostPath:
            path: "{{ .Values.services.plex.library.tv }}"
            type: Directory
        - name: movies
          hostPath:
            path: "{{ .Values.services.plex.library.movies }}"
            type: Directory
        - name: music
          hostPath:
            path: "{{ .Values.services.plex.library.music }}"
            type: Directory
        - name: photos
          hostPath:
            path: "{{ .Values.services.plex.library.photos }}"
            type: Directory
{{- end }}
